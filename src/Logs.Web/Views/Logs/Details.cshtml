@using Logs.Web.Models.Entries
@model Logs.Web.Models.Logs.LogDetailsViewModel

@{
    ViewBag.Title = Model.Name;
}
<script src="~/Scripts/tinymce/tinymce.min.js"></script>
<script src="~/Scripts/editor-config.js"></script>
<div class="row">

    <div class="col-lg-12">
        @if (Model.IsAuthenticated)
        {
            <div id="subscription" class="pull-right">
                @Html.Action("Subscription", "Subscription", new { logId = Model.LogId })
            </div>
        }
          <div id="description">
            @Html.Partial("_LogDescription", Model)
        </div>
      
        @if (Model.CanEdit)
        {
            <div id="edit-form">
                <hr />
                @using (Ajax.BeginForm("Edit", "Logs", null,
                            new AjaxOptions
                            {
                                UpdateTargetId = "description",
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "POST"
                            }, new { id = "edit" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.TextBoxFor(m => m.Name)
                    @Html.TextAreaFor(m => m.Description, new { cols = "40", rows = "20" })
                    <br />
                    @Html.HiddenFor(m => m.LogId)
                    @Html.HiddenFor(m => m.ProfileImageUrl)
                    @Html.HiddenFor(m => m.CanEdit)
                    @Html.HiddenFor(m => m.User)
                    @Html.HiddenFor(m => m.DateCreated)
                    @Html.HiddenFor(m => m.VotesCount)
                    <input type="submit" value="Edit" class="btn btn-primary" />
                }
            </div>
        }
        <hr>

        <p>
            @if (Model.CanEdit)
            {
                <button class="btn btn-primary btn-lg" id="entries-btn">New Entry</button>
            }

            @if (Model.IsAuthenticated && Model.Entries.Any())
            {
                <button class="btn btn-primary btn-lg" id="comment-btn">Comment</button>
            }

            @if (Model.CanVote)
            {
                @Ajax.ActionLink(" ",
                    "Vote",
                    new { controller = "Vote", logId = Model.LogId, currentVoteCount = Model.VotesCount },
                    new AjaxOptions
                    {
                        UpdateTargetId = "rating",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "POST"
                    }, new { @class = "glyphicon glyphicon-thumbs-up pull-right btn-lg", id = "rating-btn" })
            }

        </p>
        @if (Model.CanEdit)
        {
            <div id="entry-form">
                @Html.Partial("_NewEntryBoxPartial", new NewEntryViewModel { LogId = Model.LogId })
            </div>
        }
        @if (Model.IsAuthenticated && Model.Entries.Any())
        {
            <div id="comment-form">
                @Html.Partial("_CommentBoxPartial", new NewCommentViewModel { LogId = Model.LogId })
            </div>
        }
        <hr />

        <div id="comments">
            @if (Model.Entries.Count > 0)
            {
                @Html.Partial("_LogEntriesPartial", Model.Entries)
            }
        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/Scripts/details.js")
    @Scripts.Render("~/bundles/jquery-unobtrusive")
}